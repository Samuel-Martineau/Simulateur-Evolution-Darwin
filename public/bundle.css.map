{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Sidebar.svelte",
    "../src/EditConfig.svelte",
    "../src/Modal.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import '../node_modules/bulma/css/bulma.min.css';\n  import EditConfig from './EditConfig.svelte';\n  import downloadFile from 'js-file-download';\n  import Sidebar from './Sidebar.svelte';\n  import Navbar from './Navbar.svelte';\n  import Modal from './Modal.svelte';\n  import uuid from 'uuid-random';\n\n  const defaultConfig = {\n    name: 'Nouvelle configuration',\n    id: uuid(),\n    prey: {\n      name: '',\n      startingNb: 0,\n      genes: [\n        {\n          displayName: 'Vitesse',\n          name: 'speed',\n          modificator: '',\n          avg: 0,\n          stdDev: 0,\n          value: 0,\n          displayValue: '${this.value.toFixed(2)} ue / ut',\n          adjustments: {},\n        },\n        {\n          displayName: 'Nombre de bébés',\n          name: 'nbOfBabies',\n          modificator: '',\n          avg: 0,\n          stdDev: 0,\n          value: 0,\n          displayValue:\n            \"${Math.round(this.value)} bébé${ this.value > 1 ? 's' : '' }\",\n          adjustments: {},\n        },\n        {\n          displayName: 'Longévité',\n          name: 'longevity',\n          modificator: '',\n          avg: 0,\n          stdDev: 0,\n          value: 0,\n          displayValue: '${this.value.toFixed(2)} ut',\n          adjustments: {},\n        },\n        {\n          displayName: 'Intervalle entre les périodes de reproduction',\n          name: 'intervalBetweenReproducingPeriods',\n          modificator: '',\n          avg: 0,\n          stdDev: 0,\n          value: 0,\n          displayValue: '${this.value.toFixed(2)} ut',\n          adjustments: {},\n        },\n        {\n          displayName: 'Distance de vue',\n          name: 'renderDistance',\n          modificator: '',\n          avg: 0,\n          stdDev: 0,\n          value: 0,\n          displayValue: '${this.value.toFixed(2)} ue',\n          adjustments: {},\n        },\n        {\n          displayName: 'Nombre de plantes à manger',\n          name: 'hungerLevel',\n          modificator: '',\n          avg: 0,\n          stdDev: 0,\n          value: 0,\n          displayValue: '${Math.round(this.value)} plantes',\n          adjustments: {},\n        },\n        {\n          displayName: 'Temps pour manger',\n          name: 'eatingInterval',\n          modificator: '',\n          avg: 0,\n          stdDev: 0,\n          value: 0,\n          displayValue: '${this.value.toFixed(2)} ue',\n          adjustments: {},\n        },\n      ],\n    },\n    predator: {\n      name: '',\n      startingNb: 0,\n      genes: [\n        {\n          displayName: 'Vitesse',\n          name: 'speed',\n          modificator: '',\n          avg: 0,\n          stdDev: 0,\n          value: 0,\n          displayValue: '${this.value.toFixed(2)} ue / ut',\n          adjustments: {},\n        },\n        {\n          displayName: 'Nombre de bébés',\n          name: 'nbOfBabies',\n          modificator: '',\n          avg: 0,\n          stdDev: 0,\n          value: 0,\n          displayValue:\n            \"${Math.round(this.value)} bébé${ this.value > 1 ? 's' : '' }\",\n          adjustments: {},\n        },\n        {\n          displayName: 'Longévité',\n          name: 'longevity',\n          modificator: '',\n          avg: 0,\n          stdDev: 0,\n          value: 0,\n          displayValue: '${this.value.toFixed(2)} ut',\n          adjustments: {},\n        },\n        {\n          displayName: 'Intervalle entre les périodes de reproduction',\n          name: 'intervalBetweenReproducingPeriods',\n          modificator: '',\n          avg: 0,\n          stdDev: 0,\n          value: 0,\n          displayValue: '${this.value.toFixed(2)} ut',\n          adjustments: {},\n        },\n        {\n          displayName: 'Distance de vue',\n          name: 'renderDistance',\n          modificator: '',\n          avg: 0,\n          stdDev: 0,\n          value: 0,\n          displayValue: '${this.value.toFixed(2)} ue',\n          adjustments: {},\n        },\n        {\n          displayName: \"Nombre d'herbivores à manger\",\n          name: 'hungerLevel',\n          modificator: '',\n          avg: 0,\n          stdDev: 0,\n          value: 0,\n          displayValue: '${Math.round(this.value)} herbivores',\n          adjustments: {},\n        },\n        {\n          displayName: 'Temps pour manger',\n          name: 'eatingInterval',\n          modificator: '',\n          avg: 0,\n          stdDev: 0,\n          value: 0,\n          displayValue: '${this.value.toFixed(2)} ue',\n          adjustments: {},\n        },\n      ],\n    },\n    plant: {\n      startingNb: 0,\n      spawnRate: 0,\n      spawnInterval: 0,\n    },\n    size: 8000,\n    scale: 1,\n    offsetX: 0,\n    offsetY: 0,\n    speed: 1,\n    seed: Math.floor(Math.random() * 100000000),\n    nbOfAnimalsSnapshotInterval: 50,\n  };\n\n  let configs = loadConfigs();\n  let currConfig = configs[0] || undefined;\n\n  let showSimulatorModal = false;\n  let loaded = false;\n  let fullscreenDiv;\n  let iframe;\n\n  let showUploadModal = false;\n  let chosenFile = '';\n\n  $: if (currConfig) configs = configs;\n  $: configs = configs.sort((a, b) => a.name > b.name);\n\n  function save() {\n    localStorage.setItem('configs', JSON.stringify(configs));\n  }\n\n  function newConfig() {\n    let config = JSON.parse(JSON.stringify(defaultConfig));\n    config.id = uuid();\n    configs = [...configs, config];\n    editConfig({ detail: config.id });\n  }\n\n  function editConfig({ detail: id }) {\n    currConfig = configs.filter(c => c.id === id)[0];\n  }\n\n  function deleteConfig() {\n    const i = configs.findIndex(c => c.id === currConfig.id);\n    configs = configs.filter(c => c.id !== currConfig.id);\n    if (i > 0) currConfig = configs[i - 1];\n    else currConfig = undefined;\n  }\n\n  function duplicateConfig() {\n    const i = configs.findIndex(c => c.id === currConfig.id);\n    const part1 = configs.slice(0, i + 1);\n    const part2 = configs.slice(i + 1);\n    const newConfig = JSON.parse(JSON.stringify(currConfig));\n    newConfig.name += ' (Copie)';\n    newConfig.id = uuid();\n    currConfig = newConfig;\n    configs = [...part1, newConfig, ...part2];\n  }\n\n  function executeConfig() {\n    showSimulatorModal = true;\n    currConfig.prey.genes.forEach(g => {\n      for (let key in g.adjustments) {\n        if (!g.adjustments[key]) delete g.adjustments[key];\n      }\n    });\n    currConfig.predator.genes.forEach(g => {\n      for (let key in g.adjustments) {\n        if (!g.adjustments[key]) delete g.adjustments[key];\n      }\n    });\n    if (!loaded) {\n      setTimeout(executeConfig, 0);\n    } else {\n      let simulator = iframe.contentWindow;\n      simulator.config = currConfig;\n      simulator.start();\n      loaded = false;\n    }\n  }\n\n  function uploadConfig() {\n    showUploadModal = true;\n  }\n\n  function endUploadConfig() {\n    if (!chosenFile) return;\n    showUploadModal = false;\n    let reader = new FileReader();\n    reader.onload = e => {\n      const newConfig = Object.assign(\n        JSON.parse(JSON.stringify(defaultConfig)),\n        JSON.parse(e.target.result)\n      );\n      newConfig.name = newConfig.name || 'Configuration téléversée';\n      newConfig.id = uuid();\n      configs = [...configs, newConfig];\n      currConfig = newConfig;\n    };\n    reader.readAsText(chosenFile);\n  }\n\n  function loadConfigs() {\n    return JSON.parse(localStorage.getItem('configs')) || [];\n  }\n\n  function toggleSimulatorFullscreen() {\n    if (iframe.requestFullscreen) iframe.requestFullscreen();\n    else if (iframe.mozRequestFullScreen) iframe.mozRequestFullScreen();\n    else if (iframe.webkitRequestFullscreen) iframe.webkitRequestFullscreen();\n    else if (iframe.msRequestFullscreen) iframe.msRequestFullscreen();\n  }\n\n  function downloadConfig() {\n    downloadFile(\n      JSON.stringify(currConfig, null, 2),\n      currConfig.name + '.json'\n    );\n  }\n</script>\n\n<style lang=\"scss\" global>:global(*) {\n  margin: 0;\n  padding: 0;\n  font-family: sans-serif; }\n\n:global(#wrapper) {\n  display: flex;\n  padding: 15px; }\n\n:global(:-moz-full-screen) {\n  background: white; }\n\n:global(:-webkit-full-screen) {\n  background: white; }\n\n:global(:-ms-fullscreen) {\n  background: white; }\n\n:global(:fullscreen) {\n  background: white; }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9BcHAuc3ZlbHRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsU0FBUztFQUNULFVBQVU7RUFDVix1QkFBdUIsRUFBRTs7QUFFM0I7RUFDRSxhQUFhO0VBQ2IsYUFBYSxFQUFFOztBQUVqQjtFQUNFLGlCQUFpQixFQUFFOztBQUVyQjtFQUNFLGlCQUFpQixFQUFFOztBQUVyQjtFQUNFLGlCQUFpQixFQUFFOztBQUVyQjtFQUNFLGlCQUFpQixFQUFFIiwiZmlsZSI6InNyYy9BcHAuc3ZlbHRlIiwic291cmNlc0NvbnRlbnQiOlsiKiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IH1cblxuI3dyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBwYWRkaW5nOiAxNXB4OyB9XG5cbjotbW96LWZ1bGwtc2NyZWVuIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7IH1cblxuOi13ZWJraXQtZnVsbC1zY3JlZW4ge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTsgfVxuXG46LW1zLWZ1bGxzY3JlZW4ge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTsgfVxuXG46ZnVsbHNjcmVlbiB7XG4gIGJhY2tncm91bmQ6IHdoaXRlOyB9XG5cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPUFwcC5zdmVsdGUuY3NzLm1hcCAqLyJdfQ== */</style>\n\n<svelte:head>\n  <title>Simulateur d'évolution selon Darwin</title>\n  <link rel=\"stylesheet\" href=\"bulma.css\" />\n</svelte:head>\n\n<Navbar />\n\n<div id=\"wrapper\">\n  <Sidebar\n    {configs}\n    currentConfigId={currConfig ? currConfig.id : undefined}\n    on:save={save}\n    on:delete={deleteConfig}\n    on:duplicate={duplicateConfig}\n    on:execute={executeConfig}\n    on:newconfig={newConfig}\n    on:uploadconfig={uploadConfig}\n    on:editconfig={editConfig}\n    on:download={downloadConfig} />\n  {#if currConfig}\n    <EditConfig bind:config={currConfig} />\n  {/if}\n</div>\n\n<Modal bind:show={showSimulatorModal}>\n  <h1 class=\"title is-4\" slot=\"title\" style=\"margin: 0;\">\n    {currConfig ? currConfig.name : undefined}\n  </h1>\n  <div bind:this={fullscreenDiv}>\n    <iframe\n      id=\"simulator\"\n      src=\"simulator.html\"\n      frameborder=\"0\"\n      title=\"simulateur\"\n      style=\"width: 75vw; height: 79vh;\"\n      on:load={() => (loaded = true)}\n      bind:this={iframe} />\n  </div>\n  <button\n    class=\"button is-primary\"\n    style=\"width: 100%;\"\n    on:click={toggleSimulatorFullscreen}>\n    Plein écran\n  </button>\n</Modal>\n\n<Modal bind:show={showUploadModal} height=\"100px\">\n  <h1 class=\"title is-4\" slot=\"title\" style=\"margin: 0;\">\n    Téléversement d'une configuration\n  </h1>\n  <div class=\"file has-name is-fullwidth\">\n    <label class=\"file-label\">\n      <input\n        class=\"file-input\"\n        type=\"file\"\n        accept=\"application/json\"\n        on:change={e => (chosenFile = e.target.files[0])} />\n      <span class=\"file-cta\">\n        <span class=\"file-label\">⬆️ Choisissez un fichier ⬆️</span>\n      </span>\n      <span class=\"file-name\">\n        {chosenFile.name || 'Veuillez téléverser un fichier de type JSON'}\n      </span>\n    </label>\n  </div>\n  <button\n    class=\"button\"\n    class:is-success={chosenFile}\n    class:is-danger={!chosenFile}\n    on:click={endUploadConfig}\n    style=\"margin-top: 10px; width: 100%; transition: background 500ms;\">\n    Téléverser\n  </button>\n</Modal>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n  import Modal from './Modal.svelte';\n\n  export let currentConfigId;\n  export let configs;\n\n  let dispatch = createEventDispatcher();\n  let maxCharCount = 40;\n</script>\n\n<style>\n  div {\n    flex: 0 0 25%;\n    max-width: 25vw;\n    overflow: hidden;\n    margin-right: 10px;\n  }\n</style>\n\n<div>\n  <aside class=\"menu\">\n    <p class=\"menu-label\">Actions</p>\n    <ul class=\"menu-list\">\n      <li>\n        <a href=\"##\" on:click={() => dispatch('save')}>\n          Sauvegarder toutes les configurations\n        </a>\n      </li>\n      {#if currentConfigId}\n        <li>\n          <a href=\"##\" on:click={() => dispatch('delete')}>\n            Supprimer cette configuration\n          </a>\n        </li>\n        <li>\n          <a href=\"##\" on:click={() => dispatch('duplicate')}>\n            Dupliquer cette configuration\n          </a>\n        </li>\n        <li>\n          <a href=\"##\" on:click={() => dispatch('execute')}>\n            Exécuter cette configuration\n          </a>\n        </li>\n        <li>\n          <a href=\"##\" on:click={() => dispatch('download')}>\n            Télécharger cette configuration\n          </a>\n        </li>\n      {/if}\n      <li>\n        <a href=\"##\" on:click={() => dispatch('newconfig')}>\n          Créer une nouvelle configuration\n        </a>\n      </li>\n      <li>\n        <a href=\"##\" on:click={() => dispatch('uploadconfig')}>\n          Charger une configuration à partir d'un fichier\n        </a>\n      </li>\n    </ul>\n    <p class=\"menu-label\">Configuration(s)</p>\n    <ul class=\"menu-list\">\n      {#each configs as config}\n        <li>\n          <a\n            href=\"##\"\n            on:click={() => {\n              currentConfigId = config.id;\n              dispatch('editconfig', config.id);\n            }}\n            class:is-active={currentConfigId === config.id}>\n            {config.name.substring(0, maxCharCount) + (config.name.length > maxCharCount ? '...' : '')}\n          </a>\n        </li>\n      {/each}\n    </ul>\n  </aside>\n</div>\n",
    "<script>\n  import NumberInput from './NumberInput.svelte';\n  import TextInput from './TextInput.svelte';\n  import Select from './Select.svelte';\n  import copy from 'copy-to-clipboard';\n\n  export let config;\n</script>\n\n<style lang=\"scss\">form {\n  flex: 1;\n  margin: 10px 0; }\n  form h1.title.is-4 {\n    margin: 35px 0 4px 0; }\n  form h1.title.is-5 {\n    margin: 20px 0 5px 0; }\n\n/*# sourceMappingURL=EditConfig.svelte.css.map */</style>\n\n<form>\n\n  <TextInput bind:value={config.name} label=\"Nom de la configuration\" />\n\n  <h1 class=\"title is-4\">Herbivores</h1>\n  <TextInput\n    bind:value={config.prey.name}\n    label=\"Nom de l'espèce des herbivores\" />\n  <NumberInput\n    bind:value={config.prey.startingNb}\n    label=\"Nombre de départ\"\n    unit=\"herbivore(s)\" />\n  {#each config.prey.genes as gene}\n    {console.log((gene.adjustments = gene.adjustments || {})) || ''}\n    <h1 class=\"title is-5\">Gène « {gene.displayName} »</h1>\n    <Select label=\"Modificateur\" bind:value={gene.modificator}>\n      <option value=\"stddev\">Écart type</option>\n      <option value=\"constant\">Constant</option>\n    </Select>\n    {#if gene.modificator === 'stddev'}\n      <NumberInput label=\"Valeur moyenne\" bind:value={gene.avg} />\n      <NumberInput label=\"Écart type\" bind:value={gene.stdDev} />\n    {:else if gene.modificator !== ''}\n      <NumberInput label=\"Valeur\" bind:value={gene.value} />\n    {/if}\n    <label class=\"label\">\n      Ajustements\n      <i>\n        ( Ex:\n        <code on:click={() => copy('Math.round(${value} * 0.05)')}>\n          {'Math.round(${value} * 0.05)'}\n        </code>\n        )\n      </i>\n    </label>\n    <div class=\"field has-addons\">\n      <p class=\"control\">\n        <span class=\"select\">\n          <select bind:value={gene.selectedAdjustmentGeneName}>\n            <option value=\"\" disabled default>Veuillez choisir un gène</option>\n            {#each config.prey.genes as g}\n              <option value={g.name}>{g.displayName}</option>\n            {/each}\n          </select>\n        </span>\n      </p>\n      <p class=\"control is-expanded\">\n        {console.log((gene.selectedAdjustmentGeneName = gene.selectedAdjustmentGeneName || '')) || ''}\n        {console.log((gene.adjustments[gene.selectedAdjustmentGeneName] = gene.adjustments[gene.selectedAdjustmentGeneName] || '')) || ''}\n        <input\n          disabled={gene.selectedAdjustmentGeneName === ''}\n          class=\"input\"\n          type=\"text\"\n          placeholder=\"Formule pour ledit gène\"\n          bind:value={gene.adjustments[gene.selectedAdjustmentGeneName]} />\n      </p>\n    </div>\n  {/each}\n\n  <h1 class=\"title is-4\">Carnivores</h1>\n  <TextInput\n    bind:value={config.predator.name}\n    label=\"Nom de l'espèce des carnivores\" />\n  <NumberInput\n    bind:value={config.predator.startingNb}\n    label=\"Nombre de départ\"\n    unit=\"carnivore(s)\" />\n  {#each config.predator.genes as gene}\n    {console.log((gene.adjustments = gene.adjustments || {})) || ''}\n    <h1 class=\"title is-5\">Gène de {gene.displayName.toLowerCase()}</h1>\n    <Select label=\"Modificateur\" bind:value={gene.modificator}>\n      <option value=\"stddev\">Écart type</option>\n      <option value=\"constant\">Constant</option>\n    </Select>\n    {#if gene.modificator === 'stddev'}\n      <NumberInput label=\"Valeur moyenne\" bind:value={gene.avg} />\n      <NumberInput label=\"Écart type\" bind:value={gene.stdDev} />\n    {:else if gene.modificator !== ''}\n      <NumberInput label=\"Valeur\" bind:value={gene.value} />\n    {/if}\n    <label class=\"label\">\n      Ajustements\n      <i>\n        ( Ex:\n        <code on:click={() => copy('Math.round(${value} * 0.05)')}>\n          {'Math.round(${value} * 0.05)'}\n        </code>\n        )\n      </i>\n    </label>\n    <div class=\"field has-addons\">\n      <p class=\"control\">\n        <span class=\"select\">\n          <select bind:value={gene.selectedAdjustmentGeneName}>\n            <option value=\"\" disabled default>Veuillez choisir un gène</option>\n            {#each config.prey.genes as g}\n              <option value={g.name}>{g.displayName}</option>\n            {/each}\n          </select>\n        </span>\n      </p>\n      <p class=\"control is-expanded\">\n        {console.log((gene.selectedAdjustmentGeneName = gene.selectedAdjustmentGeneName || '')) || ''}\n        {console.log((gene.adjustments[gene.selectedAdjustmentGeneName] = gene.adjustments[gene.selectedAdjustmentGeneName] || '')) || ''}\n        <input\n          disabled={gene.selectedAdjustmentGeneName === ''}\n          class=\"input\"\n          type=\"text\"\n          placeholder=\"Formule pour ledit gène\"\n          bind:value={gene.adjustments[gene.selectedAdjustmentGeneName]} />\n      </p>\n    </div>\n  {/each}\n\n  <h1 class=\"title is-4\">Plantes</h1>\n  <NumberInput\n    bind:value={config.plant.startingNb}\n    label=\"Nombre de départ\"\n    unit=\"plantes\" />\n  <NumberInput\n    bind:value={config.plant.spawnInterval}\n    label=\"Interval entre les vagues d'appartion des plantes\"\n    unit=\"ut\" />\n  <NumberInput\n    bind:value={config.plant.spawnRate}\n    label=\"Nombre de plantes par vague d'apparition\"\n    unit=\"plantes\" />\n\n  <h1 class=\"title is-4\">Autres</h1>\n  <NumberInput bind:value={config.size} label=\"Taille de la carte\" unit=\"ue\" />\n  <NumberInput bind:value={config.seed} label=\"SEED\" />\n  <NumberInput\n    bind:value={config.nbOfAnimalsSnapshotInterval}\n    label=\"Interval entre les recensement des populations\"\n    unit=\"ut\" />\n</form>\n",
    "<script>\n  import { fade } from 'svelte/transition';\n  import cssVars from 'svelte-css-vars';\n\n  export let show = false;\n  export let width = '80vw';\n  export let height = '80vh';\n\n  $: styleVars = {\n    width,\n    height,\n  };\n\n  document.body.style.height = '100vh';\n  document.addEventListener('keyup', e => (show = show && e.key !== 'Escape'));\n\n  $: if (show) {\n    document.body.style.overflow = 'hidden';\n  } else {\n    document.body.style.overflow = 'initial';\n  }\n\n  function close() {\n    show = false;\n  }\n</script>\n\n<style lang=\"scss\">#modal {\n  width: var(--width);\n  min-height: var(--height);\n  position: absolute;\n  transform: translateY(-50%) translateX(-50%);\n  top: 50%;\n  left: 50%;\n  background: white;\n  border-radius: 17px;\n  z-index: 1001; }\n  #modal > div {\n    margin: 20px; }\n    #modal > div hr {\n      margin: 10px 0; }\n  #modal #close {\n    font-size: 40px;\n    position: absolute;\n    right: 10px;\n    top: 5px;\n    cursor: default; }\n\n#backdrop {\n  width: 100vw;\n  height: 100vh;\n  background: rgba(82, 88, 97, 0.7);\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1000; }\n\n.hidden {\n  display: none; }\n\n/*# sourceMappingURL=Modal.svelte.css.map */</style>\n\n{#if show}\n  <div>\n    <div id=\"backdrop\" on:click={close} />\n    <div id=\"modal\" use:cssVars={styleVars}>\n      <div>\n        <span id=\"close\" on:click={close}>⛔️</span>\n        <slot name=\"title\" />\n        <hr />\n        <slot />\n      </div>\n    </div>\n  </div>\n{/if}\n"
  ],
  "names": [],
  "mappings": "AAiSkC,CAAC,AAAE,CAAC,AACpC,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,WAAW,CAAE,UAAU,AAAE,CAAC,AAEpB,QAAQ,AAAE,CAAC,AACjB,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,IAAI,AAAE,CAAC,AAEV,iBAAiB,AAAE,CAAC,AAC1B,UAAU,CAAE,KAAK,AAAE,CAAC,AAEd,oBAAoB,AAAE,CAAC,AAC7B,UAAU,CAAE,KAAK,AAAE,CAAC,AAEd,eAAe,AAAE,CAAC,AACxB,UAAU,CAAE,KAAK,AAAE,CAAC,AAEd,WAAW,AAAE,CAAC,AACpB,UAAU,CAAE,KAAK,AAAE,CAAC;ACxSpB,GAAG,eAAC,CAAC,AACH,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CACb,SAAS,CAAE,IAAI,CACf,QAAQ,CAAE,MAAM,CAChB,YAAY,CAAE,IAAI,AACpB,CAAC;ACRgB,IAAI,cAAC,CAAC,AACvB,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,IAAI,CAAC,CAAC,AAAE,CAAC,AACjB,kBAAI,CAAC,EAAE,MAAM,KAAK,cAAC,CAAC,AAClB,MAAM,CAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,AAAE,CAAC,AACzB,kBAAI,CAAC,EAAE,MAAM,KAAK,cAAC,CAAC,AAClB,MAAM,CAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,AAAE,CAAC;ACYR,MAAM,cAAC,CAAC,AACzB,KAAK,CAAE,IAAI,OAAO,CAAC,CACnB,UAAU,CAAE,IAAI,QAAQ,CAAC,CACzB,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,WAAW,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,CAC5C,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,AAAE,CAAC,AAChB,oBAAM,CAAG,GAAG,cAAC,CAAC,AACZ,MAAM,CAAE,IAAI,AAAE,CAAC,AACf,oBAAM,CAAG,GAAG,CAAC,EAAE,cAAC,CAAC,AACf,MAAM,CAAE,IAAI,CAAC,CAAC,AAAE,CAAC,AACrB,oBAAM,CAAC,MAAM,cAAC,CAAC,AACb,SAAS,CAAE,IAAI,CACf,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,GAAG,CAAE,GAAG,CACR,MAAM,CAAE,OAAO,AAAE,CAAC,AAEtB,SAAS,cAAC,CAAC,AACT,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CACjC,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,IAAI,AAAE,CAAC"
}